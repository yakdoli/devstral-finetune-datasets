{
  "pdf_name": "tools",
  "page_number": 1101,
  "file_name": "page_1101.jpeg",
  "image_rel_path": "tools\\page_1101.jpeg",
  "created_at": "2025-08-09T08:27:36Z",
  "mode": "process_isolated",
  "prompt": "\nYou are a meticulous technical documentation OCR and structuring agent specialized in Syncfusion Winforms User Guides.\nYour task is to convert the given documentation image (jpg) into HIGH-FIDELITY Markdown that is suitable for LLM fine-tuning datasets and RAG retrieval.\n\nCONTEXT VALUES (use EXACTLY in the metadata header):\n- source: image\n- domain: syncfusion-sdk\n- task: pdf-ocr-to-markdown\n- language: en (keep original; do not translate)\n- source_filename: page_1101.jpeg\n- document_name: tools\n- page_number: 1101\n- page_id: tools#page_1101\n- product: Syncfusion Winforms\n- version: 11.4.0.26\n- timestamp: 2025-08-09T08:27:36Z\n- fidelity: lossless\n\nGLOBAL OUTPUT CONTRACT (MUST FOLLOW EXACTLY):\n- Top-level must start with an HTML comment metadata block:\n  <!--\n  source: image\n  domain: syncfusion-sdk\n  task: pdf-ocr-to-markdown\n  language: en (keep original; do not translate)\n  source_filename: page_1101.jpeg\n  document_name: tools\n  page_number: 1101\n  page_id: tools#page_1101\n  product: Syncfusion Winforms\n  version: 11.4.0.26\n  timestamp: 2025-08-09T08:27:36Z\n  fidelity: lossless\n  -->\n- After metadata, output the structured content only in Markdown. No extra explanations.\n- Do not invent content. If text is cropped/unclear, include \"[unclear]\" and keep position.\n- Preserve all text as-is except for OCR normalization rules below.\n\nOCR NORMALIZATION RULES:\n- Merge hyphenated line breaks: \"inter-\n  face\" -> \"interface\" when it's the same token.\n- Normalize multiple spaces to single spaces, but preserve indentation inside code blocks.\n- Preserve Unicode punctuation and math symbols as-is.\n- Keep list numbering as shown (don't renumber).\n- Keep casing exactly; do not title-case or sentence-case.\n- Remove soft hyphen (­) characters.\n- Normalize common OCR ligatures: \"fi\", \"fl\" errors back to original if misread, but only when unambiguous.\n- If a word is split across columns or layout artifacts, reconstruct it only when unambiguous; otherwise keep with \"[unclear]\".\n\nLAYOUT AND NOISE FILTERING (STRICT):\n- Reading order: for multi-column pages, read column 1 top→bottom, then column 2 top→bottom, etc. Do not interleave lines across columns.\n- Ignore page furniture: page headers/footers, running titles, page numbers, watermarks, and document-wide copyright banners unless they contain page-unique content.\n- Ignore site/app chrome/navigation such as: Home, Contents/TOC sidebar, Breadcrumbs, Previous/Next, Expand All/Collapse All, language switchers unless the page’s body explicitly references them.\n- If a table spans columns or wraps, reconstruct the logical row/column order.\n- Do not duplicate repeated section titles that appear in both header and body—keep the body title only.\n\nSTRUCTURE SCHEMA (ENFORCE):\n# {Page/Main Title}\n\n## Overview\n- 1-3 bullets summarizing the page scope using only visible text.\n\n## Content\n- Reconstruct hierarchy (H2/H3/H4) exactly as in image.\n- Tables: use GitHub-flavored Markdown. Keep column order, headers, alignment if visible.\n- Lists: preserve nesting and markers (-, *, 1.) as-is.\n- Callouts: map to blockquotes with labels (Note:, Warning:, Tip:).\n- Figures/Captions: include as \"Figure: ...\" lines when present.\n\n### WinForms-specific conventions\n- Prefer C# samples when language is ambiguous; if VB is explicitly shown, keep both.\n- Treat control names, namespaces, and types exactly (e.g., Syncfusion.Windows.Forms.Tools.TabControlAdv, Syncfusion.Windows.Forms.Grid).\n- Distinguish design-time vs runtime features; preserve property grids, designer steps, and menu paths as regular text or ordered lists.\n- When API elements are listed (Properties/Methods/Events), keep their exact order and names, including parentheses for methods and event handler signatures if visible.\n\n## API Reference (if applicable)\n- Namespace, Class, Members (Methods/Properties/Events/Enums) in subsections.\n- Parameters table: Name | Type | Description | Default | Required\n- Returns: Type + description.\n- Exceptions: bullet list.\n\n## Code Examples (multi-language supported)\n- Extract ALL code exactly. Use fenced blocks with language: ```csharp, ```vb, ```xml, ```xaml, ```js, ```css, ```ts, ```python.\n- Keep full signatures, imports/usings, comments, region markers.\n- Inline code in text should be wrapped with backticks.\n\n## Page-level Navigation/TOC (if applicable)\n- If the body contains a local Table of Contents for this page, keep it as a bullet/numbered list with links/text as shown. Do not create links that don’t exist.\n- Ignore global site TOC or breadcrumbs unless the page explicitly describes them.\n\n## Cross References\n- Add See also: bullet list of explicit links/texts present on the page. Do not fabricate.\n\n## RAG Annotations\n- At the end, add an HTML comment with tags and keywords derived ONLY from visible content:\n  <!-- tags: [product, module, control, api, version?] keywords: [k1, k2, ...] -->\n - Add optional per-section anchors as HTML comments before each H2/H3 to aid chunking, using IDs derived from the heading (kebab-case), e.g., <!-- anchor: tools#page_1101#getting-started -->. Do not add if the heading text is unclear.\n\nADDITIONAL RULES:\n- Units, versions, file paths, and identifiers must be preserved exactly.\n- Do not reflow long lines inside code blocks.\n- Preserve table cell line breaks using <br> if present.\n- For cross-page references without URLs, keep the exact anchor text.\n- For images/icons with meaningful labels, include a short alt text inline as: \"Figure: <label>\"; ignore purely decorative icons.\n- Do not include scanning artifacts, crop marks, or repeated footer legal texts unless unique to this page.\n\nOutput now in the specified format.\n",
  "extra": {
    "client": "ProcessIsolatedQwenClient",
    "worker_id": 3,
    "process_id": 47748
  }
}