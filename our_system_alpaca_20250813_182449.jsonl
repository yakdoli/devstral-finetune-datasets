{"instruction": "Syncfusion WinForms GridControl에서 셀 병합을 어떻게 설정하나요?</s>", "output": "Syncfusion WinForms GridControl에서 셀 병합을 설정하는 방법: 1. **기본 병합 동작 설정:** ```csharp GridStyleInfo standardStyle = BaseStylesMap[\"Standard\"].StyleInfo; standardStyle.MergeCell = GridMergeCellDirection.RowsInColumn; GridStyleInfo rowHeaderStyle = BaseStylesMap[\"Row Header\"].StyleInfo; rowHeaderStyle.MergeCell = GridMergeCellDirection.RowsInColumn; ``` 2. **온디맨드 셀 병합 활성화:** ```csharp Options.MergeCellsMode = GridMergeCellsMode.OnDemandCalculationGridMergeCellsMode.MergeRowsInColumn; ``` 이 설정을 통해 그리드는 내용에 따라 자동으로 행을 병합합니다.</s>", "input": "GridControl의 MergeCell 기능에 대해 설명해주세요.</s>", "metadata": {"source": "unknown", "component": "GridControl", "difficulty": "Intermediate", "category": "DataBinding", "sample_index": 0, "original_quality_score": 1.0, "has_context": false, "has_turns": false}}
{"instruction": "Syncfusion WinForms에서 HTMLUI 컨트롤의 이벤트를 어떻게 처리하나요?</s>", "output": "Syncfusion WinForms HTMLUI 컨트롤에서 제공하는 주요 이벤트들: **사용 가능한 이벤트:** - `TitleChanged`: 문서 제목이 변경될 때 - `ShowTitleChanged`: 제목 표시 상태가 변경될 때 - `LoadFinished`: 문서 로딩이 완료될 때 - `LoadStarted`: 문서 로딩이 시작될 때 - `LoadError`: 문서 로딩 중 오류가 발생할 때 - `PreRenderDocument`: 문서 렌더링 전에 발생 **이벤트 처리 예제:** ```csharp htmluiControl.LoadFinished += (sender, e) = { // 문서 로딩 완료 후 처리 }; htmluiControl.LoadError += (sender, e) = { // 오류 처리 }; ```</s>", "input": "HTMLUI 컨트롤에서 사용할 수 있는 이벤트들을 알려주세요.</s>", "metadata": {"source": "unknown", "component": "HTMLUI", "difficulty": "Beginner", "category": "Events", "sample_index": 1, "original_quality_score": 1.0, "has_context": false, "has_turns": false}}
{"instruction": "Syncfusion WinForms에서 스크립팅을 통해 HTML 요소를 조작하는 방법을 설명해주세요.</s>", "output": "Syncfusion WinForms HTMLUI에서 C# 스크립팅을 통한 HTML 요소 조작: **스크립트 클래스 구현:** ```csharp using System; using Syncfusion.Windows.Forms.HTMLUI; public class Script { IHTMLElement txtText = null; IHTMLElement btnRun = null; IHTMLElement elmCustom = null; public static Script OnScriptStart() { return new Script(); } public Script() { // HTML 요소 참조 가져오기 txtText = Global.Document.GetElementByUserId(\"btn\"); btnRun = Global.Document.GetElementByUserId(\"txt\"); elmCustom = Global.Document.GetElementByUserId(\"custom\"); // 이벤트 핸들러 연결 btnRun.Click += new EventHandler(CScustom_Run); } public void CScustom_Run(object sender, EventArgs args) { if(elmCustom == null) return; INPUTElementImpl txtElm = txtText as INPUTElementImpl; // HTML 내용 동적 변경 elmCustom.InnerHTML = txtElm.UserControl.CustomControl.Text.Replace(\":-)\", \"img src='smile.bmp'\"); } } ``` 이 방식으로 C# 코드에서 HTML 요소를 직접 조작할 수 있습니다.</s>", "input": "HTMLUI에서 C# 스크립트로 HTML 요소를 제어하는 예제를 보여주세요.</s>", "metadata": {"source": "unknown", "component": "HTMLUI", "difficulty": "Advanced", "category": "Scripting", "sample_index": 2, "original_quality_score": 1.0, "has_context": false, "has_turns": false}}
